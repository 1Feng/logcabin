// Copyright (c) 2011 Stanford University
//
// Permission to use, copy, modify, and distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR(S) DISCLAIM ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL AUTHORS BE LIABLE FOR
// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

package DLog;

// open

message OpenRequest {
    required string logName = 1;
}

message OpenResponse {
    required int32 logId = 1;
}

// delete

message DeleteRequest {
    required int32 logId = 1;
}

message DeleteResponse {
}

// list

message ListRequest {
}

message ListResponse {
    message Log {
        required string logName = 1;
        required int32 logId = 2;
    }
    repeated Log logs = 1;
}

// append

message AppendRequest {
    required uint64 logId = 1;
    repeated uint64 invalidates = 2;
    required bytes blob = 3;
    optional uint64 lastEntryId = 4;
}

message AppendResponse {
    required uint64 entryId = 1;
}

// invalidate

message InvalidateRequest {
    required uint64 logId = 1;
    repeated uint64 invalidates = 2;
    optional uint64 lastEntryId = 3;
}

message InvalidateResponse {
    required uint64 entryId = 1;
}

// read

message ReadRequest {
    required uint64 logId = 1;
    optional uint64 entryId = 2;
}

message ReadResponse {
    message Chunk {
        required uint64 entryId = 1;
        required bytes blob = 2;
    }
    repeated Chunk chunks = 1;
}

// getHead

message GetHeadRequest {
    required uint64 logId = 1;
}

message GetHeadResponse {
    required uint64 entryId = 1;
}

